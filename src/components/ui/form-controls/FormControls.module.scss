.container {
  display: flex;
  flex-direction: column;
  width: 280px;
  position: relative;
}

.label {
  color: var(--content-primary);
  margin-bottom: 16px;
}

.labelWrapper {
  display: flex;
  justify-content: space-between;
}

.charCounter {
  font-size: 12px;
  color: var(--content-secondary);
  padding: 4px;
}

.requiredDot {
  display: inline-block;
  width: 6px;
  height: 6px;
  background-color: var(--content-negative);
  border-radius: 50%;
  margin-left: 6px;
  vertical-align: middle;
}

.wrapper {
  display: flex;
  align-items: center;
  position: relative;
  border-bottom: 1px solid var(--border-primary);
  transition: border-color 0.2s, box-shadow 0.2s, background 0.2s;
  margin-bottom: 8px;

  &:hover {
    border-color: var(--border-primary-hover);
  }

  &:has(input:focus) {
    border-color: var(--border-primary-press);
  }
}

.input {
  flex: 1;
  border: none;
  outline: none;
  background: transparent;
  padding: 10px 8px;
  color: var(--content-primary);

  &::placeholder {
    color: var(--content-placeholder);
    opacity: 1;
    transition: color 0.2s ease;
  }

  &:disabled::placeholder {
    color: var(--content-disabled);
  }
}

.iconLeft,
.iconRight {
  display: flex;
  align-items: center;
  justify-content: center;
}

.iconLeft {
  margin-right: 8px;
}

.iconRight {
  margin-left: 8px;
}

.disabled {
  .wrapper {
    border-color: var(--content-disabled);;
    cursor: not-allowed;
  }

  .input {
    color: var(--content-disabled);;
    cursor: not-allowed;
  }

  .label {
    color: var(--content-disabled);
    cursor: not-allowed;
  }
}

.error {
  border-color: var(--border-negative);

  &:hover {
    border-color: var(--border-negative);
  }

  &:has(input:focus) {
    border-color: var(--border-negative);
  }
}

.helperText {
  color: var(--content-secondary);
}

.helperTextError {
  color: var(--content-negative);
}

.textarea {
  flex: 1;
  border: none;
  outline: none;
  background: transparent;
  padding: 10px 8px;
  color: var(--content-primary);
  font-family: inherit;
  resize: none;
  min-height: 120px;
  line-height: 1.4;

  &::placeholder {
    color: var(--content-placeholder);
    opacity: 1;
    transition: color 0.2s ease;
  }

  &:disabled {
    color: var(--content-disabled);
    cursor: not-allowed;

    &::placeholder {
      color: var(--content-disabled);
    }
  }
}

.wrapper:has(textarea:focus) {
  border-color: var(--border-primary-press);
}

.wrapper.error:has(textarea) {
  border-color: var(--border-negative);
}

.disabled .textarea {
  color: var(--content-disabled);
  cursor: not-allowed;
}
